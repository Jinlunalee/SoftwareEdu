<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mycompany.webapp.dao.ISubjectRepository">
	
	<select id="selectCourseList" resultType="SubjectVO">
		select DISTINCT
			open.course_id as "courseId", 
			course_title as "courseTitle",
			min(start_day) over (partition by open.course_id) as "startDay",
    		max(end_day) over (partition by open.course_id) as "endDay",
			sum(cost) over (partition by open.course_id) as "cost",
			recruit_start_day as "recruitStartDay", 
			recruit_end_day as "recruitEndDay",
			state_cd as "state",
			comn_cd_title as "comnCdTitle"
		from open 
				left join subject on open.subject_id = subject.subject_id
        		left join course on open.course_id = course.course_id
        		left join common_code on open.state_cd = common_code.comn_cd
        where open.course_id IS NOT NULL
	</select>
	
	<select id="selectSubjectList" resultType="SubjectVO">
		select 
			open.subject_id as "subjectId", 
			subject_seq as "subjectSeq",
			subject_title as "subjectTitle",
			support_yn as "supportYn", 
			days as "days", 
			hours as "hours", 
			level_cd as "level", 
			level_etc as "levelEtc", 
			subject.cost as "cost",
			open.course_id as "courseId", 
			course.course_title as "courseTitle", 
			start_time as "startTime",
			end_time as "endTime",
			start_day as "startDay",
			end_day as "endDay", 
			recruit_start_day as "recruitStartDay", 
			recruit_end_day as "recruitEndDay",
			recruit_people as "recruitPeople",
			state_cd as "state",
			comn_cd_title as "comnCdTitle"
		from open 
				left join subject on open.subject_id = subject.subject_id
        		left join course on open.course_id = course.course_id
        		left join common_code on open.state_cd = common_code.comn_cd
	</select>

	<select id="selectSubjectDetails" parameterType="map" resultType="SubjectVO">
		select 
			open.subject_id as "subjectId", 
			subject_seq as "subjectSeq",
			subject_title as "subjectTitle",
			support_yn as "supportYn", 
			days as "days", 
			hours as "hours", 
			level_cd as "level", 
			level_etc as "levelEtc", 
			subject.cost as "cost",
			open.course_id as "courseId", 
			course.course_title as "courseTitle", 
			subject.cat_cd as "cat", 
			content as "content",
			start_time as "startTime",
			end_time as "endTime",
			start_day as "startDay",
			end_day as "endDay", 
			recruit_start_day as "recruitStartDay", 
			recruit_end_day as "recruitEndDay",
			recruit_people as "recruitPeople",
			state_cd as "state",
			comn_cd_title as "comnCdTitle"
		from open 
				left join subject on open.subject_id = subject.subject_id
        		left join course on open.course_id = course.course_id
        		left join common_code on open.state_cd = common_code.comn_cd
        where open.subject_id = #{subjectId} and subject_seq=#{subjectSeq}
	</select>
	
	<select id="recruitTotalPeople" parameterType="map" resultType="int">
		select count(*) 
		from enroll 
		where enroll.subject_id=#{subjectId} and enroll.subject_seq=#{subjectSeq} 
			and enroll.state_cd=#{state}
	</select>
	
	<update id="updateSubject" parameterType="SubjectVO">
		update open
		set 
    		start_day =#{startDay}, end_day=#{endDay}, start_time = #{startTime}, end_time = #{endTime}, 
    		recruit_start_day=#{recruitStartDay} , recruit_end_day = #{recruitEndDay}, recruit_people = #{recruitPeople},
    		content = #{content}, file_id=#{fileId}
		where subject_id = #{subjectId} and subject_seq = #{subjectSeq}
	</update>
	
	<update id="updateFileData" parameterType="UploadfileVO">
		update upload_file
		set
			file_name=#{fileName}, file_size=#{fileSize}, 
			file_content_type=#{fileContentType}, file_data=#{fileData}
		where 
			file_id=#{fileId}
	</update>
	
	<insert id="insertSubject" parameterType="SubjectVO">
		insert into open 
						(subject_id, subject_seq, course_id, content, start_time, end_time, start_day, end_day, recruit_start_day, recruit_end_day,
                		recruit_people, state_cd, reg_id, reg_dt, del_yn)
		values 
			(#{subjectId},SEQ_SUBJECT.NEXTVAL,#{courseId},#{content},#{startTime},#{endTime},#{startDay},#{endDay},#{recruitStartDay},#{recruitEndDay},
				#{recruitPeople},#{state}, 'mgr1', SYSDATE, 'N')
	</insert>
	
	<insert id="insertFileData" parameterType="com.mycompany.webapp.dto.UploadfileVO">
		insert into upload_file 
			(file_id, subject_id, file_name, file_size, file_content_type, file_data)
		values(#{fileId}, #{subjectId}, #{fileName}, #{fileSize}, #{fileContentType}, #{fileData})
	</insert>
	
	<select id="selectAllCourse" resultType="SubjectVO">
		select 
			course_id as "courseId", 
			course_title as "courseTitle"
		from course
	</select>
	
	<select id="selectAllSubject" resultType="SubjectVO">
		select 
			subject_id as "subjectId", 
			subject_title as "subjectTitle"
		from subject
	</select>
	
	<select id="infoSubject" parameterType="String" resultType="SubjectVO">
		select 
				subject_id as "subjectId",
				subject_title as "subjectTitle", 
				support_yn as "supportYn", 
				cat_cd as "catSubject", 
				days as "days", 
				hours as "hours", 
				level_cd as "level", 
				level_etc as "levelEtc", 
				cost as "cost"
		from subject 
		where subject_id= #{subjectId}
	</select>
	
	<select id="infoOpenCourse" parameterType="String" resultType="SubjectVO">
		select DISTINCT 
						course_id as "courseId", 
						min(start_day) over (partition by course_id) as "startDay", 
						max(end_day) over (partition by course_id) as "endDay", 
						recruit_start_day as "recruitStartDay", 
						recruit_end_day as "recruitEndDay"
		from open
		where course_id = #{courseId}
	</select>
	
	<select id="checkOpenCourse" parameterType="String" resultType="int">
		select count(*) from open where course_id = #{courseId}
	</select>
	
	<update id="updateRecruitSameCourse" parameterType="SubjectVO">
		update open
		set recruit_start_day=#{recruitStartDay} , recruit_end_day=#{recruitEndDay}
		where course_id = #{courseId}
	</update>
	
	<update id="clickDeleteOpen" parameterType="map">
		update open
		set del_yn = 'N'
		where subject_id = #{subjectId} and subject_seq = #{subjectSeq}
	</update>
	
	<update id="clickDeleteUploadFile" parameterType="map">
		update upload_file
		set del_yn = 'N'
		where subject_id = #{subjectId} and subject_seq = #{subjectSeq}
	</update>
	
</mapper>