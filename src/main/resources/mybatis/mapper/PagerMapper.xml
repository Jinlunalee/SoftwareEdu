<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mycompany.webapp.dao.IPagerRepository">

	<select id="getCountStudentRow" resultType="int">
		/*getCountStudentRow*/
		SELECT count(*) FROM student
	</select>

	<select id="selectStudentListByPage" parameterType="Pager" resultType="StudentVO">
		/*selectStudentListByPage*/
		
		SELECT
			rnum,
			name,
			student_id, 
			email, 
			birth, 
			position
		FROM (
		  SELECT ROWNUM as rnum, name, student_id, email, birth, position
		  FROM (
		    SELECT name, student_id, email, birth, position
		    FROM student
		    ORDER BY student_id
		  )
		  WHERE rownum <![CDATA[ < ]]> = #{endRowNo}
		)
		WHERE rnum <![CDATA[ > ]]> = #{startRowNo}
		
	</select>
	
	<select id="getCountOpenCourseRow" parameterType="String" resultType="int">
		/*getCountOpenCourseRow*/
		SELECT count(distinct open.course_id)
		FROM open
		LEFT JOIN course ON open.course_id = course.course_id
		WHERE open.course_id is not null
		<choose>
			<when test="catCourse != 'all'">
				AND del_yn = 'N' AND course.cat_cd = #{catCourse}
			</when>
			<when test="catCourse = 'all'">
				AND del_yn = 'N'
			</when>
		</choose>
	</select>

	<select id="selectOpenCourseListByPage" parameterType="map" resultType="SubjectVO">
		/*selectOpenCourseListByPage*/
		select
		    rnum,
		    "courseId", 
		    "courseTitle",
		    "startDay",
		    "endDay",
		    "cost",
		    "recruitStartDay", 
		    "recruitEndDay",
		    "state",
		    "comnCdTitle",
		    "catCourse"
		from (
		    select 
		        rownum as rnum,
		        "courseId", 
		        "courseTitle",
		        "startDay",
		        "endDay",
		        "cost",
		        "recruitStartDay", 
		        "recruitEndDay",
		        "state",
		        "comnCdTitle",
		        "catCourse"
		    from (
		        select DISTINCT
					open.course_id as "courseId", 
					course_title as "courseTitle",
					min(start_day) over (partition by open.course_id) as "startDay",
		    		max(end_day) over (partition by open.course_id) as "endDay",
					sum(cost) over (partition by open.course_id) as "cost",
					recruit_start_day as "recruitStartDay", 
					recruit_end_day as "recruitEndDay",
					state_cd as "state",
					comn_cd_title as "comnCdTitle",
					course.cat_cd as "catCourse"
				from open 
						left join subject on open.subject_id = subject.subject_id
		        		left join course on open.course_id = course.course_id
		        		left join common_code on open.state_cd = common_code.comn_cd
		        where open.course_id IS NOT NULL
     			<choose>
					<when test="catCourse != 'all'">
						AND del_yn = 'N' AND course.cat_cd = #{catCourse}
					</when>
					<when test="catCourse = 'all'">
						AND del_yn = 'N'
					</when>
				</choose>
		  )
		  WHERE rownum <![CDATA[ < ]]>= #{endRowNo}
		)
		WHERE rnum <![CDATA[ > ]]>= #{startRowNo}
	</select>	
	
	<select id="getCountOpenSubjectRow" parameterType="String" resultType="int">
		/*getCountOpenSubjectRow*/
		SELECT count(*)
		FROM open
		LEFT JOIN subject ON open.subject_id = subject.subject_id
    	<choose>
			<when test="catSubject != 'all'">
				WHERE del_yn = 'N' AND subject.cat_cd=#{catSubject}
			</when>
			<when test="catSubject = 'all'">
				WHERE del_yn = 'N'
			</when>
		</choose>
	</select>

	<select id="selectOpenSubjectListByPage" parameterType="map" resultType="SubjectVO">
		/*selectOpenSubjectListByPage*/
		select
		    rnum, 
		    "subjectId", 
		    "subjectSeq",
		    "subjectTitle",
		    "supportYn", 
		    "days", 
		    "hours", 
		    "level", 
		    "levelEtc", 
		    "cost",
		    "courseId", 
		    "courseTitle", 
		    "startTime",
		    "endTime",
		    "startDay",
		    "endDay", 
		    "recruitStartDay", 
		    "recruitEndDay",
		    "recruitPeople",
		    "state",
		    "comnCdTitle",
		    "fileId",
		    "catSubject",
		    "regDt"
		from (
		    select
		        rownum as rnum,
		        "subjectId", 
		        "subjectSeq",
		        "subjectTitle",
		        "supportYn", 
		        "days", 
		        "hours", 
		        "level", 
		        "levelEtc", 
		        "cost",
		        "courseId", 
		        "courseTitle", 
		        "startTime",
		        "endTime",
		        "startDay",
		        "endDay", 
		        "recruitStartDay", 
		        "recruitEndDay",
		        "recruitPeople",
		        "state",
		        "comnCdTitle",
				"fileId",
				"catSubject",
				"regDt"
		    from (
		        select 
					open.subject_id as "subjectId", 
					subject_seq as "subjectSeq",
					subject_title as "subjectTitle",
					support_yn as "supportYn", 
					days as "days", 
					hours as "hours", 
					level_cd as "level", 
					level_etc as "levelEtc", 
					subject.cost as "cost",
					open.course_id as "courseId", 
					course.course_title as "courseTitle", 
					start_time as "startTime",
					end_time as "endTime",
					start_day as "startDay",
					end_day as "endDay", 
					recruit_start_day as "recruitStartDay", 
					recruit_end_day as "recruitEndDay",
					recruit_people as "recruitPeople",
					state_cd as "state",
					comn_cd_title as "comnCdTitle",
					file_id as "fileId",
					subject.cat_cd as "catSubject",
					open.reg_dt as "regDt"
				from open 
						left join subject on open.subject_id = subject.subject_id
		        		left join course on open.course_id = course.course_id
		        		left join common_code on open.state_cd = common_code.comn_cd
		        <choose>
					<when test="catSubject != 'all'">
						WHERE del_yn = 'N' AND subject.cat_cd=#{catSubject}
						order by open.reg_dt desc
					</when>
					<when test="catSubject = 'all'">
						WHERE del_yn = 'N'
						order by open.reg_dt desc
					</when>
				</choose>
		  )
		  WHERE rownum <![CDATA[ < ]]>= #{endRowNo}
		)
		WHERE rnum <![CDATA[ > ]]>= #{startRowNo}
	</select>
	

	<select id="getCountEnrollRow" resultType="int">
		/*getCountEnrollRow*/
		SELECT count(*) FROM enroll WHERE NOT (del_yn='Y')
	</select>

	<select id="selectEnrollListByPage" parameterType="Pager" resultType="EnrollVO">
		/*selectEnrollListByPage*/
		SELECT
		    rnum,
		    "enrollId", 
		    "subjectId", 
		    "subjectSeq", 
		    "studentId", 
		    "name", 
		    "subjectTitle", 
		    "stateCd", 
		    "completeHours", 
		    "regId", 
		    "regDt", 
		    "modiId", 
		    "modiDt", 
		    "delYn", 
		    "cancelRsCd", 
		    "cancelRsEtc", 
		    "startTime", 
		    "endTime", 
		    "startDay", 
		    "endDay",
		    "openStateCd",
		    "courseId",
       		"courseTitle" 
		FROM (
		    SELECT
		        rownum as rnum,
		        "enrollId", 
		        "subjectId", 
		        "subjectSeq", 
		        "studentId", 
		        "name", 
		        "subjectTitle", 
		        "stateCd", 
		        "completeHours", 
		        "regId", 
		        "regDt", 
		        "modiId", 
		        "modiDt", 
		        "delYn", 
		        "cancelRsCd", 
		        "cancelRsEtc", 
		        "startTime", 
		        "endTime", 
		        "startDay", 
		        "endDay",
		        "openStateCd",
		        "courseId",
        		"courseTitle"
		    FROM (
		        SELECT  enroll_id AS "enrollId", 
		                e.subject_id AS "subjectId", 
		                e.subject_seq AS "subjectSeq", 
		                e.student_id AS "studentId", 
		                name AS "name", 
		                s.subject_title AS "subjectTitle", 
		                e.state_cd AS "stateCd", 
		                complete_hours AS "completeHours", 
		                e.reg_id AS "regId", 
		                e.reg_dt AS "regDt", 
		                e.modi_id AS "modiId", 
		                e.modi_dt AS "modiDt", 
		                e.del_yn AS "delYn", 
		                cancel_rs_cd AS "cancelRsCd", 
		                cancel_rs_etc AS "cancelRsEtc", 
		                start_time AS "startTime", 
		                end_time AS "endTime", 
		                start_day AS "startDay", 
		                end_day AS "endDay",
		                o.state_cd as "openStateCd",
                        o.course_id as "courseId",
        				course_title as "courseTitle"
		        FROM ENROLL e 
		        LEFT OUTER JOIN STUDENT t 
		        ON e.student_id = t.student_id 
		        LEFT OUTER JOIN OPEN o 
		        ON e.subject_id = o.subject_id AND e.subject_seq = o.subject_seq 
		        LEFT OUTER JOIN SUBJECT s 
		        ON e.subject_id = s.subject_id 
		        LEFT OUTER JOIN course c
				ON o.course_id = c.course_id
		        WHERE NOT (e.del_yn ='Y') 
		        ORDER BY e.reg_dt DESC 
		  )
		  WHERE rownum <![CDATA[ < ]]>= #{endRowNo}
		)
		WHERE rnum <![CDATA[ > ]]>= #{startRowNo}
	</select>
	
	<select id="getCountSearchRow" parameterType="EnrollVO" resultType="int">
		/*getCountSearchRow*/
		SELECT count(*) 
		FROM ENROLL e 
		LEFT OUTER JOIN STUDENT t 
		ON e.student_id = t.student_id 
        LEFT OUTER JOIN OPEN o 
        ON e.subject_id = o.subject_id AND e.subject_seq = o.subject_seq 
        LEFT OUTER JOIN SUBJECT s 
        ON e.subject_id = s.subject_id 
        LEFT OUTER JOIN COURSE c 
        ON c.course_id = o.course_id 
		WHERE NOT (e.del_yn ='Y') 
			<if test="applyStartDay != '' and applyEndDay != ''">
				AND e.reg_dt BETWEEN #{applyStartDay} AND #{applyEndDay} 
			</if>
			<if test="applyStartDay != '' and applyEndDay = ''">
				AND e.reg_dt = #{applyStartDay}
			</if>
			<if test='student != "" and student.equals("sdName")'>
				AND (name = #{keyword1} OR REPLACE(name, ' ', '') LIKE '%' || #{keyword1} || '%') 
			</if>
			<if test='student != "" and student.equals("sdId")'>
				AND (e.student_id = #{keyword1} OR REPLACE(e.student_id, ' ', '') LIKE '%' || #{keyword1} || '%') 
			</if>
			<if test='course != "" and course.equals("sj")'>
				AND (s.subject_title = #{keyword2} OR REPLACE(s.subject_title, ' ', '') LIKE '%' || #{keyword2} || '%')   
			</if>
			<if test='course != "" and course.equals("cs")'>
				AND (c.course_title = #{keyword2} OR REPLACE(c.course_title, ' ', '') LIKE '%' || #{keyword2} || '%')   
			</if>
			<if test='state != "" and state.equals("apply")'>
				AND e.state_cd = 'ERL01' 
			</if>
			<if test='state != "" and state.equals("applyCancel")'>
				AND e.state_cd = 'ERL02' 
			</if>
			<if test='state != "" and state.equals("expect")'>
				AND e.state_cd = 'ERL03' 
			</if>
			<if test='state != "" and state.equals("progress")'>
				AND e.state_cd = 'ERL04' 
			</if>
			<if test='state != "" and state.equals("cancel")'>
				AND e.state_cd = 'ERL05' 
			</if>
			<if test='state != "" and state.equals("complete")'>
				AND e.state_cd = 'ERL06' 
			</if>
	</select>
	
	<select id="selectSearchListByPage" parameterType="map" resultType="EnrollVO">
		/*selectSearchListByPage*/
		SELECT rnum, 
			"enrollId", 
		    "subjectId", 
		    "subjectSeq", 
		    "subjectTitle", 
		    "courseId", 
		    "courseTitle", 
		    "studentId", 
		    "name", 
		    "stateCd", 
		    "completeHours", 
		    "regId", 
		    "regDt", 
		    "modiId", 
		    "modiDt", 
		    "delYn", 
		    "cancelRsCd", 
		    "cancelRsEtc", 
		    "startTime", 
		    "endTime", 
		    "startDay", 
		    "endDay",
		    "openStateCd"
		FROM (
			SELECT 
			rownum as rnum,
			"enrollId", 
		    "subjectId", 
		    "subjectSeq", 
		    "subjectTitle", 
		    "courseId", 
		    "courseTitle", 
		    "studentId", 
		    "name",  
		    "stateCd", 
		    "completeHours", 
		    "regId", 
		    "regDt", 
		    "modiId", 
		    "modiDt", 
		    "delYn", 
		    "cancelRsCd", 
		    "cancelRsEtc", 
		    "startTime", 
		    "endTime", 
		    "startDay", 
		    "endDay",
		    "openStateCd"
		FROM (
			SELECT  enroll_id AS "enrollId", 
				e.subject_id AS "subjectId", 
				e.subject_seq AS "subjectSeq", 
				s.subject_title AS "subjectTitle", 
				c.course_id AS "courseId", 
                c.course_title AS "courseTitle", 
				e.student_id AS "studentId", 
				name AS "name",  
				e.state_cd AS "stateCd", 
				complete_hours AS "completeHours", 
				e.reg_id AS "regId", 
				e.reg_dt AS "regDt", 
				e.modi_id AS "modiId", 
				e.modi_dt AS "modiDt", 
				e.del_yn AS "delYn", 
				cancel_rs_cd AS "cancelRsCd", 
				cancel_rs_etc AS "cancelRsEtc", 
        		start_time AS "startTime", 
        		end_time AS "endTime", 
        		start_day AS "startDay", 
        		end_day AS "endDay",
        		o.state_cd as "openStateCd"
		FROM ENROLL e 
		LEFT OUTER JOIN STUDENT t 
		ON e.student_id = t.student_id 
        LEFT OUTER JOIN OPEN o 
        ON e.subject_id = o.subject_id AND e.subject_seq = o.subject_seq 
        LEFT OUTER JOIN SUBJECT s 
        ON e.subject_id = s.subject_id 
        LEFT OUTER JOIN COURSE c 
        ON c.course_id = o.course_id 
		WHERE NOT (e.del_yn ='Y') 
			<if test="applyStartDay != '' and applyEndDay != ''">
				AND e.reg_dt BETWEEN #{applyStartDay} AND #{applyEndDay}
			</if>
			<if test="applyStartDay != '' and applyEndDay = ''">
				AND e.reg_dt = #{applyStartDay}
			</if>
			<if test='student != "" and student.equals("sdName")'>
				AND (name = #{keyword1} OR REPLACE(name, ' ', '') LIKE '%' || #{keyword1} || '%') 
			</if>
			<if test='student != "" and student.equals("sdId")'>
				AND (e.student_id = #{keyword1} OR REPLACE(e.student_id, ' ', '') LIKE '%' || #{keyword1} || '%') 
			</if>
			<if test='course != "" and course.equals("sj")'>
				AND (s.subject_title = #{keyword2} OR REPLACE(s.subject_title, ' ', '') LIKE '%' || #{keyword2} || '%')   
			</if>
			<if test='course != "" and course.equals("cs")'>
				AND (c.course_title = #{keyword2} OR REPLACE(c.course_title, ' ', '') LIKE '%' || #{keyword2} || '%')   
			</if>
			<if test='state != "" and state.equals("apply")'>
				AND e.state_cd = 'ERL01' 
			</if>
			<if test='state != "" and state.equals("applyCancel")'>
				AND e.state_cd = 'ERL02' 
			</if>
			<if test='state != "" and state.equals("expect")'>
				AND e.state_cd = 'ERL03' 
			</if>
			<if test='state != "" and state.equals("progress")'>
				AND e.state_cd = 'ERL04' 
			</if>
			<if test='state != "" and state.equals("cancel")'>
				AND e.state_cd = 'ERL05' 
			</if>
			<if test='state != "" and state.equals("complete")'>
				AND e.state_cd = 'ERL06' 
			</if>
		ORDER BY e.reg_dt DESC 
				)
			WHERE rownum <![CDATA[ < ]]>= #{endRowNo} 
			)
			WHERE rnum <![CDATA[ > ]]>= #{startRowNo}
	</select>
	
	
</mapper>